steps:

# We need to checkout the repository.
- name: 'ubuntu'
  args:
  args:
    - '-c'
    - 'find . -mindepth 1 -delete'
- name: 'gcr.io/cloud-builders/git'
  args: ['clone', '${REPO_NAME}', '.']
- name: 'gcr.io/cloud-builders/git'
  args: ['checkout', '${COMMIT_SHA}']

# Validate the gazelle configuration.
- name: 'gcr.io/cloud-builders/bazel'
  args: ['run', '//:gazelle', '--', 'update-repos', '-from_file=go.mod']
- name: 'gcr.io/cloud-builders/git'
  args: ['diff', '--exit-code', 'WORKSPACE']

# Build the Go branch.
- name: 'gcr.io/cloud-builders/bazel'
  args: ['build', ':gopath']
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/go-branch', '-f', 'cloudbuild/go.Dockerfile', '.']
- name: 'gcr.io/$PROJECT_ID/go-branch'
  args: ['tools/go_branch.sh']
- name: 'gcr.io/cloud-builders/git'
  args: ['checkout', 'go']
- name: 'gcr.io/cloud-builders/git'
  args: ['clean', '-f']

# Validate.
- name: 'golang'
  args: ['go', 'build', './...']

# Ensure that go.mod and go.sum don't change.
- name: 'gcr.io/cloud-builders/git'
  args: ['diff', '--exit-code', 'go.mod', 'go.sum']

# Push if necessary.
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'bash'
  args:
    - '-c'
    - 'if [[ "$BRANCH_NAME" == "master" ]]; then git push "${_ORIGIN}" go:go; fi'

substitutions:
    _ORIGIN: 'origin'
