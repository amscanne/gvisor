// automatically generated by stateify.

package hostinet

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *socketOpsCommon) beforeSave() {}
func (x *socketOpsCommon) save(m state.Map) {
	x.beforeSave()
	m.Save("SendReceiveTimeout", &x.SendReceiveTimeout)
	m.Save("family", &x.family)
	m.Save("stype", &x.stype)
	m.Save("protocol", &x.protocol)
	m.Save("queue", &x.queue)
	m.Save("fd", &x.fd)
}

func (x *socketOpsCommon) afterLoad() {}
func (x *socketOpsCommon) load(m state.Map) {
	m.Load("SendReceiveTimeout", &x.SendReceiveTimeout)
	m.Load("family", &x.family)
	m.Load("stype", &x.stype)
	m.Load("protocol", &x.protocol)
	m.Load("queue", &x.queue)
	m.Load("fd", &x.fd)
}

func init() {
	state.Register("pkg/sentry/socket/hostinet.socketOpsCommon", (*socketOpsCommon)(nil), state.Fns{Save: (*socketOpsCommon).save, Load: (*socketOpsCommon).load})
}
