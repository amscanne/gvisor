// automatically generated by stateify.

package host

import (
	"gvisor.dev/gvisor/pkg/state"
)

func (x *ConnectedEndpoint) beforeSave() {}
func (x *ConnectedEndpoint) save(m state.Map) {
	x.beforeSave()
	m.Save("ref", &x.ref)
	m.Save("fd", &x.fd)
	m.Save("addr", &x.addr)
	m.Save("stype", &x.stype)
}

func (x *ConnectedEndpoint) afterLoad() {}
func (x *ConnectedEndpoint) load(m state.Map) {
	m.Load("ref", &x.ref)
	m.Load("fd", &x.fd)
	m.Load("addr", &x.addr)
	m.Load("stype", &x.stype)
}

func init() {
	state.Register("pkg/sentry/fsimpl/host.ConnectedEndpoint", (*ConnectedEndpoint)(nil), state.Fns{Save: (*ConnectedEndpoint).save, Load: (*ConnectedEndpoint).load})
}
